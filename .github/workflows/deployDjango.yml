name: CI/CD Pipeline for Django and React Docker Container

on:
  push:
    paths:
      - '2-Django-React/frontend/public/index.html'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Revisar el cÃ³digo del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Paso 3: Construir la imagen de Docker
      - name: Build the Docker image
        run: |
          TAG=$(date +%s)
          echo "Using tag: $TAG"
          docker build -f 2-Django-React/frontend/Dockerfile -t my-frontend-image:$TAG 2-Django-React/
          docker build -f 2-Django-React/backend/Dockerfile -t my-backend-image:$TAG 2-Django-React/
          echo "TAG=$TAG" >> $GITHUB_ENV
      
      # Paso 4: Publicar la imagen
      - name: Push Docker image to Docker Hub
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:${{ env.TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend-image:${{ env.TAG }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 5: Instalar Azure CLI manualmente
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Paso 6: Autenticarse en Azure
      - name: Authenticate with Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      # Paso 7: Obtener credenciales del cluster de AKS
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      # Paso 8: Deploy kubernetes
      - name: Deploy to AKS
        env:
          FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-frontend-image:${{ env.TAG }}
          BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-backend-image:${{ env.TAG }}
        run: |
          kubectl create namespace django || echo "Namespace already exists"
          sed -i "s|FRONTEND_IMAGE|$FRONTEND_IMAGE|g" 2-Django-React/kubernetes/deployment.yaml
          sed -i "s|BACKEND_IMAGE|$BACKEND_IMAGE|g" 2-Django-React/kubernetes/deployment.yaml
          kubectl apply -f 2-Django-React/kubernetes/deployment.yaml
          kubectl apply -f 2-Django-React/kubernetes/service.yaml
