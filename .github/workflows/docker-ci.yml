name: CI/CD Pipeline for NGINX Docker Container

on:
  push:
    paths:
      - '3-CICD/index.html'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Revisar el código del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Verificar la estructura del repositorio
      - name: Show current directory and files
        run: |
          pwd
          ls -R

      # Paso 3: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Paso 4: Construir la imagen de Docker
      - name: Build the Docker image
        run: |
          docker build -f 3-CICD/Dockerfile -t my-nginx-image 3-CICD/
      
      # Paso 5: Publicar la imagen
      - name: Push Docker image to Docker Hub
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker tag my-nginx-image $DOCKER_USERNAME/my-nginx-image:latest
          docker push $DOCKER_USERNAME/my-nginx-image:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 6: Instalar Azure CLI manualmente
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Paso 7: Autenticarse en Azure
      - name: Authenticate with Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      # Paso 8: Obtener credenciales del clúster de AKS
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      # Paso 9: Verificar existencia de kubernetes/deployment.yaml
      - name: Check if kubernetes/deployment.yaml exists
        run: |
          if [ -f kubernetes/deployment.yaml ]; then echo "File exists"; else echo "File does not exist"; fi

      # Paso 10: Crear el namespace si no existe
      - name: Create Kubernetes namespace
        run: |
          kubectl create namespace nginx || echo "Namespace already exists"

      # Paso 11: Desplegar en AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
